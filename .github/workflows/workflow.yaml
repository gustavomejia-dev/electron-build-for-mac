name: Build Electron App

on:
  push:
    branches:
      - main 
      - mac
      - master # Executa o workflow ao fazer push na branch principal
  pull_request:

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18' # Altere para a versão que está usando

    - name: Install dependencies
      run: npm install

    - name: Build the Electron App
      run: npm run build # Altere para o comando que usa para build

    - name: Package with Electron Builder
      run: npx electron-builder --mac --win --linux  # Ajuste as opções conforme necessário

    # Opção 1: Salvar como Artefato
    - name: Upload Electron Installer as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: electron-installer
        path: dist/ # Coloque o caminho correto da pasta onde o instalador é salvo

    # Opção 2: Criar uma Release e anexar o Instalador
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: 'v1.0.0'  # Atualize o número da versão dinamicamente se desejar
        release_name: 'Release v1.0.0'
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Installer to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/installer-name.dmg  # Caminho do instalador específico (exemplo .dmg para macOS)
        asset_name: installer-name.dmg       # Nome do arquivo de instalador
        asset_content_type: application/octet-stream
